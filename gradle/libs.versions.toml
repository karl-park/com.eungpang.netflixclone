[versions]
## SDK Versions
minSdk = "21"
targetSdk = "33"
compileSdk = "33"

# Dependencies
kotlin = "1.7.0"
androidGradlePlugin = "7.2.2"

compose = "1.2.1"
composeCompiler = "1.2.0"
coroutines = "1.6.4"
koin = "3.2.0"
ktor = "2.0.2"
lifecycle = "2.5.1"

russhwolf = "0.9"


[libraries]

androidx-core = { module = "androidx.core:core-ktx", version = "1.7.0" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version = "1.4.1" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
androidx-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version = "2.5.1" }
androidx-test-junit = { module = "androidx.test.ext:junit-ktx", version = "1.1.3" }

compose-compiler = { module = "androidx.compose.compiler:compiler", version.ref = "composeCompiler" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }
compose-material-icons = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose" }
compose-activity = { module = "androidx.activity:activity-compose", version = "1.5.1" }
compose-animation = { module = "androidx.compose.animation:animation", version.ref = "compose" }


coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

google-accompanist-swipeRefresh = { module = "com.google.accompanist:accompanist-swiperefresh", version = "0.23.1" }

gradlePlugin-android = { module = "com.android.tools.build:gradle", version.ref = "androidGradlePlugin" }
gradlePlugin-kotlinSerialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
gradlePlugin-ktlint = { module = "org.jlleitschuh.gradle:ktlint-gradle", version = "10.2.1" }

junit = { module = "junit:junit", version = "4.13.2" }

koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }

ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-okHttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }

roboelectric = { module = "org.robolectric:robolectric", version = "4.7.3" }

kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

russhwolf-multiplatform = { module = "com.russhwolf:multiplatform-settings", version.ref = "russhwolf" }
russhwolf-multiplatform-noarg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "russhwolf" }

[plugins]
gradleDependencyUpdate = "com.github.ben-manes.versions:0.42.0"

[bundles]
app-ui = [
    "compose-compiler",
    "androidx-core",
    "androidx-appcompat",
    "androidx-lifecycle-runtime",
    "androidx-lifecycle-viewmodel",
    "androidx-viewmodel-compose",
    "compose-ui",
    "compose-tooling",
    "compose-foundation",
    "compose-material",
    "compose-material-icons",
    "compose-activity",
    "compose-animation",
    "google-accompanist-swipeRefresh"
]
gradlePlugins = [
    "gradlePlugin-android",
    "gradlePlugin-kotlinSerialization",
    "gradlePlugin-ktlint",
]
ktor-common = [
    "ktor-client-core",
    "ktor-client-logging",
    "ktor-client-serialization",
    "ktor-client-contentNegotiation"
]
shared-commonTest = [
    "kotlin-test",
    "koin-test",
    "coroutines-test",
    "ktor-client-mock"
]
shared-androidTest = [
    "androidx-test-junit",
    "coroutines-test",
    "roboelectric",
]
multiplatform = [
    "russhwolf-multiplatform",
    "russhwolf-multiplatform-noarg"
]
